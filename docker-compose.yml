version: '3.8'

services:
  nginx:
    container_name: nginx-gateway
    image: nginx:latest
    ports:
      - "80:80"  # NGINX lắng nghe trên cổng 80
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf  # File cấu hình NGINX
      - ./product/media:/usr/share/nginx/html/media  # Mount thư mục media vào NGINX
    depends_on:
      - user-service
      - product-service
      - cart-service
    restart: always

  mongo-product-db:
    container_name: mongo-product-db
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DB}
    volumes:
      - mongo-product-data:/data/db
    ports:
      - "27017:27017"
    command: mongod --quiet
    healthcheck:
      test: ["CMD", "mongosh", "--username", "${MONGO_USER}", "--password", "${MONGO_PASSWORD}", "--authenticationDatabase", "admin", "--eval", "db.adminCommand('ping')"]
      interval: 20s
      timeout: 10s
      retries: 5
      start_period: 20s

  mysql-user-db:
    container_name: mysql-user-db
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mysql-user-data:/var/lib/mysql
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres-cart-db:
    container_name: postgres-cart-db
    image: postgres:15
    environment:
      - POSTGRES_DB=${POSTGRES_NAME}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres-cart-data:/var/lib/postgresql/data

  user-service:
    container_name: user-service
    build:
      context: ./user
      dockerfile: Dockerfile
    volumes:
      - ./user:/app
    # Không cần expose port ra ngoài nữa vì NGINX sẽ xử lý
    expose:
      - "8000"
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_HOST=${MYSQL_HOST}
      - MYSQL_PORT=${MYSQL_PORT}
    depends_on:
      mysql-user-db:
        condition: service_healthy
    command: >
      sh -c "python manage.py makemigrations &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"

  product-service:
    container_name: product-service
    build:
      context: ./product
      dockerfile: Dockerfile
    volumes:
      - ./product:/app
      - ./product/media:/app/media
    expose:
      - "8001"
    environment:
      - MONGO_HOST=${MONGO_HOST}
      - MONGO_PORT=${MONGO_PORT}
      - MONGO_USER=${MONGO_USER}
      - MONGO_PASSWORD=${MONGO_PASSWORD}
      - MONGO_DB=${MONGO_DB}
      - USER_SERVICE_URL=${USER_SERVICE_URL}
    depends_on:
      mongo-product-db:
        condition: service_healthy
    command: >
      sh -c "python manage.py makemigrations &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8001"

  cart-service:
    container_name: cart-service
    build:
      context: ./cart
      dockerfile: Dockerfile
    command: >
      sh -c "python manage.py makemigrations &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8002"
    volumes:
      - ./cart:/app
    expose:
      - "8002"
    depends_on:
      - postgres-cart-db
    environment:
      - DATABASE_HOST=${POSTGRES_HOST}
      - DATABASE_PORT=${POSTGRES_PORT}
      - DATABASE_NAME=${POSTGRES_NAME}
      - DATABASE_USER=${POSTGRES_USER}
      - DATABASE_PASSWORD=${POSTGRES_PASSWORD}
      - USER_SERVICE_URL=${USER_SERVICE_URL}
      - PRODUCT_SERVICE_URL=${PRODUCT_SERVICE_URL}
      - ORDER_SERVICE_URL=${ORDER_SERVICE_URL}

volumes:
  mongo-product-data:
  mysql-user-data:
  postgres-cart-data: